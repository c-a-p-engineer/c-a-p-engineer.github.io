<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>PostgreSQL on こぴぺたん ログ</title><link>https://c-a-p-engineer.github.io/ja/tags/postgresql/</link><description>Recent content in PostgreSQL on こぴぺたん ログ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Mon, 25 Nov 2024 13:00:00 +0900</lastBuildDate><atom:link href="https://c-a-p-engineer.github.io/ja/tags/postgresql/index.xml" rel="self" type="application/rss+xml"/><item><title>【PostgreSQL】データベースを初期化する方法</title><link>https://c-a-p-engineer.github.io/ja/tech/2024/11/25/postgresql-reset-schema/</link><pubDate>Mon, 25 Nov 2024 13:00:00 +0900</pubDate><atom:modified>Mon, 25 Nov 2024 13:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/ja/tech/2024/11/25/postgresql-reset-schema/</guid><description>&lt;h1 id="postgresqlデータベースを初期化する方法">【PostgreSQL】データベースを初期化する方法&lt;/h1>
&lt;p>開発やテスト環境では、データベースを完全にリセットしたい場面が頻繁にあります。PostgreSQLでは、&lt;code>DROP SCHEMA&lt;/code> と &lt;code>CREATE SCHEMA&lt;/code> を使うことで簡単にデータベースを初期化できます。本記事では、PostgreSQL 16.3環境での具体的な手順、使用例、注意点について詳しく解説します。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/Postgresql_elephant.svg" medium="image"><media:title type="html">featured image</media:title></media:content><category>PostgreSQL</category><category>PostgreSQL</category></item><item><title>【PostgreSQL】JSONフィールドを使用する</title><link>https://c-a-p-engineer.github.io/ja/tech/2024/05/23/postgresql-json/</link><pubDate>Thu, 23 May 2024 01:00:00 +0900</pubDate><atom:modified>Thu, 23 May 2024 01:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/ja/tech/2024/05/23/postgresql-json/</guid><description>&lt;h1 id="postgresqljsonフィールドを使用する">【PostgreSQL】JSONフィールドを使用する&lt;/h1>
&lt;p>PostgreSQLはJSONデータをそのまま保存でき、柔軟な検索機能を利用することで、複雑なデータ構造を効率的に扱うことができます。PostgreSQLでのJSONフィールドの検索方法について解説します。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/Postgresql_elephant.svg" medium="image"><media:title type="html">featured image</media:title></media:content><category>PostgreSQL</category><category>PostgreSQL</category></item><item><title>【PostgreSQL】MySQLのGROUP_CONCATと同様の機能を実現する STRING_AGG</title><link>https://c-a-p-engineer.github.io/ja/tech/2024/05/23/postgresql-group_concat/</link><pubDate>Thu, 23 May 2024 01:00:00 +0900</pubDate><atom:modified>Thu, 23 May 2024 01:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/ja/tech/2024/05/23/postgresql-group_concat/</guid><description>&lt;h1 id="postgresqlmysqlのgroup_concatと同様の機能を実現する-string_agg">【PostgreSQL】MySQLのGROUP_CONCATと同様の機能を実現する STRING_AGG&lt;/h1>
&lt;p>PostgreSQLでMySQLのGROUP_CONCAT関数と同様の機能を実現する方法について説明します。STRING_AGG関数を利用する場合の問題点とその解決策を紹介し、サンプルコードを交えて具体的な使用方法を解説します。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/Postgresql_elephant.svg" medium="image"><media:title type="html">featured image</media:title></media:content><category>PostgreSQL</category><category>PostgreSQL</category></item><item><title>【Python】SQLAlchemy where in 検索を行う</title><link>https://c-a-p-engineer.github.io/ja/tech/2021/12/11/python-sqlalchemy-where-in/</link><pubDate>Sat, 11 Dec 2021 02:00:00 +0900</pubDate><atom:modified>Sat, 11 Dec 2021 02:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/ja/tech/2021/12/11/python-sqlalchemy-where-in/</guid><description>&lt;h1 id="pythonsqlalchemy-where-in-検索を行う">【Python】SQLAlchemy where in 検索を行う&lt;/h1>
&lt;p>PythonのSQLAlchemyでwhere句のinの検索を行う方法。&lt;/p>
&lt;h2 id="失敗">失敗&lt;/h2>
&lt;p>SQLAlchemyで配列をinで検索するとエラーが出ます。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/python-logo-master-v3-TM.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>Python</category><category>DB</category><category>PostgreSQL</category><category>Python</category></item><item><title>【Python】PostgreSQL使用時に文字列をエスケープする方法</title><link>https://c-a-p-engineer.github.io/ja/tech/2021/12/11/python-psycopg2-escape/</link><pubDate>Sat, 11 Dec 2021 01:00:00 +0900</pubDate><atom:modified>Sat, 11 Dec 2021 01:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/ja/tech/2021/12/11/python-psycopg2-escape/</guid><description>&lt;h1 id="pythonpostgresql使用時に文字列をエスケープする方法">【Python】PostgreSQL使用時に文字列をエスケープする方法&lt;/h1>
&lt;p>PythonでPostgreSQL使用時に文字列をエスケープする方法メモ&lt;/p>
&lt;h2 id="sqlエスケープ">SQLエスケープ&lt;/h2>
&lt;p>&lt;code>psycopg2&lt;/code> を使用します。&lt;/p>
&lt;p>&lt;code>psycopg2&lt;/code> を入れるには &lt;code>pip install psycopg2&lt;/code> でインストールが出来ます。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">psycopg2.extensions&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">adapt&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># SQLエスケープ&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">sql_escape&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 無名関数化&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">escape&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">lambda&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">adapt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;latin-1&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># リスト対応&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">isinstance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">param&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">escape&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="s2">&amp;#34;,&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 辞書型対応&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">isinstance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">dict&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">param&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">escape&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34; , &amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">()))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># その他&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">escape&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># エスケープ対象文字列&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">param&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34; &amp;#39; \ &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># エスケープ&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">string&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sql_escape&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 表示&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>出力結果&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/python-logo-master-v3-TM.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>Python</category><category>DB</category><category>PostgreSQL</category><category>Python</category></item></channel></rss>