<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Composer on こぴぺたん ログ</title><link>https://c-a-p-engineer.github.io/tags/composer/</link><description>Recent content in Composer on こぴぺたん ログ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Thu, 23 Jun 2022 12:00:00 +0900</lastBuildDate><atom:link href="https://c-a-p-engineer.github.io/tags/composer/index.xml" rel="self" type="application/rss+xml"/><item><title>【PHP】composer dump-autoload 「A non-empty PSR-4 prefix must end with a namespace separator」エラー解決</title><link>https://c-a-p-engineer.github.io/tech/2022/06/23/composer-psr4-end-with-namespace-separator/</link><pubDate>Thu, 23 Jun 2022 12:00:00 +0900</pubDate><atom:modified>Thu, 23 Jun 2022 12:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/06/23/composer-psr4-end-with-namespace-separator/</guid><description>&lt;h1 id="phpcomposer-dump-autoload-a-non-empty-psr-4-prefix-must-end-with-a-namespace-separatorエラー解決">【PHP】composer dump-autoload 「A non-empty PSR-4 prefix must end with a namespace separator」エラー解決&lt;/h1>
&lt;p>&lt;code>composer dump-autoload&lt;/code> 実行時に &lt;code>A non-empty PSR-4 prefix must end with a namespace separator&lt;/code> エラーが発生した際の解決メモ&lt;/p>
&lt;h2 id="現象">現象&lt;/h2>
&lt;p>&lt;code>composer dump-autoload&lt;/code> を実行した際に下記のエラーが出てくる。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>php</category><category>composer</category><category>php</category></item><item><title>【PHP】github のリポジトリから直接 composer require でインストール</title><link>https://c-a-p-engineer.github.io/tech/2022/02/07/composer-vcs-github/</link><pubDate>Mon, 07 Feb 2022 09:00:00 +0900</pubDate><atom:modified>Mon, 07 Feb 2022 09:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/02/07/composer-vcs-github/</guid><description>&lt;h1 id="phpgithub-のリポジトリから直接-composer-require-でインストール">【PHP】github のリポジトリから直接 composer require でインストール&lt;/h1>
&lt;p>github のリポジトリから直接 composer require でインストールするメモ。&lt;br />
OSSのリポジトリの突然の削除や非公開の自作のパッケージを使用する際に使用できる方法です。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>php</category><category>composer</category><category>php</category></item><item><title>composer の package を自作してみる</title><link>https://c-a-p-engineer.github.io/tech/2021/07/24/composer-package-self/</link><pubDate>Sat, 24 Jul 2021 04:00:00 +0900</pubDate><atom:modified>Sat, 24 Jul 2021 04:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/07/24/composer-package-self/</guid><description>&lt;h1 id="composer-の-package-を自作してみる">composer の package を自作してみる&lt;/h1>
&lt;p>composer の package を自作してみました。&lt;/p>
&lt;p>package を作りのテンプレートに以下のようなものがありますが、今回は最小構成で簡単に作ってみました。&lt;br />
&lt;a href="https://github.com/php-pds/skeleton" target="_blank" rel="nofollow noopener">php-pds/skeleton: Standard PHP package skeleton.&lt;/a>&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>composer</category><category>PHP</category></item><item><title>composer メモリオーバー対策</title><link>https://c-a-p-engineer.github.io/tech/2021/03/11/php-composer/</link><pubDate>Thu, 11 Mar 2021 09:00:00 +0900</pubDate><atom:modified>Thu, 11 Mar 2021 09:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/03/11/php-composer/</guid><description>&lt;h1 id="composer-メモリオーバー対策">composer メモリオーバー対策&lt;/h1>
&lt;p>&lt;code>composer&lt;/code> を使用するとたまに使用可能メモリを超えた場合にメモリオーバーエラーが発生します。&lt;br />
その時の対処方法のメモ。&lt;/p>
&lt;h2 id="エラー">エラー&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">composer install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PHP Fatal error: Allowed memory size of &lt;span class="m">2097152&lt;/span> bytes exhausted &lt;span class="o">(&lt;/span>tried to allocate &lt;span class="m">1974272&lt;/span> bytes&lt;span class="o">)&lt;/span> in Unknown on line &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="メモリ制限解除">メモリ制限解除&lt;/h2>
&lt;p>&lt;code>composer&lt;/code> には &lt;code>COMPOSER_MEMORY_LIMIT&lt;/code> という環境変数があるので &lt;code>COMPOSER_MEMORY_LIMIT=-1&lt;/code> を付けると &lt;code>composer&lt;/code> のメモリ制限がなくなります。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>php</category><category>composer</category><category>php</category></item></channel></rss>