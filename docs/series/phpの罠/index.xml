<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>PHPの罠 on こぴぺたん ログ</title><link>https://c-a-p-engineer.github.io/series/php%E3%81%AE%E7%BD%A0/</link><description>Recent content in PHPの罠 on こぴぺたん ログ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Wed, 13 Apr 2022 02:50:00 +0900</lastBuildDate><atom:link href="https://c-a-p-engineer.github.io/series/php%E3%81%AE%E7%BD%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>【PHP】引数にint型を指定しているとint型を超えた値を渡すとエラーになる</title><link>https://c-a-p-engineer.github.io/php-typehinting-int-overflow/</link><pubDate>Wed, 13 Apr 2022 02:50:00 +0900</pubDate><atom:modified>Wed, 13 Apr 2022 02:50:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/php-typehinting-int-overflow/</guid><description>&lt;h1 id="php引数にint型を指定しているとint型を超えた値を渡すとエラーになる">【PHP】引数にint型を指定しているとint型を超えた値を渡すとエラーになる&lt;/h1>
&lt;p>PHPで関数やメソッドにint型を指定しているとint型を超えた値を渡すとエラーになります。&lt;br />
&lt;code>Argument #1 ($x) must be of type int, float given,&lt;/code> の原因と解決方法。&lt;/p>
&lt;h2 id="エラーが発生しない">エラーが発生しない&lt;/h2>
&lt;p>PHPは動的型付けなので引数がint型を指定されていてもstringやfloatをint型にして対応してくれます。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】柔らかいプロパティの扱い __set __get の罠</title><link>https://c-a-p-engineer.github.io/php-get-set/</link><pubDate>Thu, 25 Nov 2021 09:00:00 +0900</pubDate><atom:modified>Fri, 26 Nov 2021 09:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/php-get-set/</guid><description>&lt;h1 id="php柔らかいプロパティの扱い-__set-__get-の罠">【PHP】柔らかいプロパティの扱い __set __get の罠&lt;/h1>
&lt;p>柔軟な PHP の柔らかいプロパティの扱いでマジックメソッド &lt;code>__set&lt;/code> &lt;code>__get&lt;/code> の罠があります。&lt;br />
&lt;a href="https://www.php.net/manual/ja/language.oop5.magic.php" target="_blank" rel="nofollow noopener">PHP: マジックメソッド - Manual&lt;/a>&lt;/p>
&lt;h2 id="確認環境">確認環境&lt;/h2>
&lt;ul>
&lt;li>PHP 7.3.0-8.0.13
&lt;ul>
&lt;li>&lt;a href="https://3v4l.org/">https://3v4l.org/&lt;/a> 上で確認&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="phpはとても柔軟">PHPはとても柔軟&lt;/h2>
&lt;p>PHP はとても柔軟な言語で以下のように宣言していないプロパティを実行しても柔軟に吸収をしてくれます。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】関数 empty は罠</title><link>https://c-a-p-engineer.github.io/php-empty/</link><pubDate>Fri, 04 Jun 2021 10:30:00 +0900</pubDate><atom:modified>Fri, 04 Jun 2021 10:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/php-empty/</guid><description>&lt;h1 id="関数-empty-は罠">関数 empty は罠&lt;/h1>
&lt;p>PHPの関数 &lt;code>empty&lt;/code> はとても使いやすく入力値の検査などに使いやすいですがこれが罠なんです。&lt;br />
・&lt;a href="https://www.php.net/manual/ja/function.empty.php" target="_blank" rel="nofollow noopener">PHP: empty - Manual&lt;/a>&lt;/p>
&lt;h2 id="empty-の使いやすさ">empty の使いやすさ&lt;/h2>
&lt;p>PHPマニュアルにある &lt;code>empty&lt;/code> の説明はこれだけです。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】strtotime バグ？オーバーフロー？加減算時の罠</title><link>https://c-a-p-engineer.github.io/php-strtotime/</link><pubDate>Sat, 22 May 2021 15:30:00 +0900</pubDate><atom:modified>Sat, 22 May 2021 15:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/php-strtotime/</guid><description>&lt;h1 id="strtotime-でのオーバーフロー-加減算時の罠">strtotime でのオーバーフロー？ 加減算時の罠&lt;/h1>
&lt;p>PHP の文字列から日付に変換する &lt;code>strtotime&lt;/code> の関数には加算、減算発生する際などに発生する様々な罠があります。&lt;br />
今回その罠をご紹介。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】緩やかな比較</title><link>https://c-a-p-engineer.github.io/php-comparaisions-loose/</link><pubDate>Sun, 21 Feb 2021 11:00:00 +0900</pubDate><atom:modified>Sun, 21 Feb 2021 11:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/php-comparaisions-loose/</guid><description>&lt;h1 id="php-の緩やかな比較">PHP の緩やかな比較&lt;/h1>
&lt;p>PHP は比較演算子の &lt;code>==&lt;/code> を使用した際に緩やかな比較を行います。&lt;br />
この緩やかな比較はとても間違いやすくて曖昧になりやすいため気をつけて使わなければいけません。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】int型でオーバーフロー</title><link>https://c-a-p-engineer.github.io/php-intval/</link><pubDate>Fri, 19 Feb 2021 12:00:00 +0900</pubDate><atom:modified>Fri, 19 Feb 2021 12:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/php-intval/</guid><description>&lt;h1 id="php-の-int最大値">PHP の int最大値&lt;/h1>
&lt;p>PHP の int型の最大値は32bit環境では2147483647、64bit環境では9223372036854775808となります。&lt;br />
プログラム言語によりますが int型で宣言されているものが int型の桁数を超えた場合にオーバーフローが発生します。&lt;br />
でも、PHPは動的型付け言語のためint型の最大値を超えた場合は自動的に float型になります。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】uniqidの危険性</title><link>https://c-a-p-engineer.github.io/php-uniqid/</link><pubDate>Thu, 18 Feb 2021 09:00:00 +0900</pubDate><atom:modified>Thu, 18 Feb 2021 09:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/php-uniqid/</guid><description>&lt;h1 id="uniqidの危険性">uniqidの危険性&lt;/h1>
&lt;p>PHPでは &lt;code>uniqid&lt;/code> という一意のIDを生成するという意味の名を持つ関数が存在します。&lt;br />
ですがこれを安易に使用するととても危険です。&lt;br />
&lt;a href="https://www.php.net/manual/ja/function.uniqid.php" target="_blank" rel="nofollow noopener">PHP: uniqid - Manual&lt;/a>&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item></channel></rss>