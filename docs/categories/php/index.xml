<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>PHP on こぴぺたん ログ</title><link>https://c-a-p-engineer.github.io/categories/php/</link><description>Recent content in PHP on こぴぺたん ログ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Mon, 18 Mar 2024 19:00:00 +0900</lastBuildDate><atom:link href="https://c-a-p-engineer.github.io/categories/php/index.xml" rel="self" type="application/rss+xml"/><item><title>Google ColabでPHPプログラミングを始める方法</title><link>https://c-a-p-engineer.github.io/tech/2024/03/18/google-colab-php/</link><pubDate>Mon, 18 Mar 2024 19:00:00 +0900</pubDate><atom:modified>Mon, 18 Mar 2024 19:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2024/03/18/google-colab-php/</guid><description>&lt;h1 id="google-colabでphpプログラミングを始める方法">Google ColabでPHPプログラミングを始める方法&lt;/h1>
&lt;p>Google ColabでPHPをを動かす！&lt;/p>
&lt;h2 id="phpのインストール">PHPのインストール&lt;/h2>
&lt;p>まず、PHPをGoogle Colabにインストールする手順から始めましょう。以下のコマンドを新しいColabノートブックのセルに貼り付けて実行します。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>Google Colab</category><category>PHP</category><category>PHP</category></item><item><title>PHPコマンドラインオプション「php -r」の活用</title><link>https://c-a-p-engineer.github.io/tech/2023/12/04/php-cli-r-option/</link><pubDate>Mon, 04 Dec 2023 18:30:00 +0900</pubDate><atom:modified>Mon, 04 Dec 2023 18:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2023/12/04/php-cli-r-option/</guid><description>&lt;h1 id="phpコマンドラインオプションphp--rの活用">PHPコマンドラインオプション「php -r」の活用&lt;/h1>
&lt;p>PHPはウェブ開発で広く使われている言語ですが、コマンドラインから直接PHPコードを実行する機能も提供しています。「php -r」オプションの使い方の紹介。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>PHP でグラフィックをやってみる</title><link>https://c-a-p-engineer.github.io/tech/2023/12/02/php-docker-glfw/</link><pubDate>Sat, 02 Dec 2023 04:00:00 +0900</pubDate><atom:modified>Sat, 02 Dec 2023 04:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2023/12/02/php-docker-glfw/</guid><description>&lt;h1 id="php-でグラフィックをやってみる">PHP でグラフィックをやってみる&lt;/h1>
&lt;p>PHP でグラフィックをやれるか気になってやってみました！&lt;/p>
&lt;h2 id="php-glfw">PHP-GLFW&lt;/h2>
&lt;p>PHP でグラフィックをやる方法がないかと探していたら &lt;code>PHP-GLFW&lt;/code> なるものを見つけました。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】共有メモリの活用: キャッシュクラスの作成</title><link>https://c-a-p-engineer.github.io/tech/2023/06/10/php-memory-cache/</link><pubDate>Sat, 10 Jun 2023 02:30:00 +0900</pubDate><atom:modified>Sat, 10 Jun 2023 02:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2023/06/10/php-memory-cache/</guid><description>&lt;h1 id="php共有メモリの活用-キャッシュクラスの作成">【PHP】共有メモリの活用: キャッシュクラスの作成&lt;/h1>
&lt;p>PHPでは、共有メモリというメモリの一部を複数のプロセスが共有する機能を利用ができます。&lt;br />
これを利用することで、プロセス間でデータをやり取りしたり、一時的なデータを保存したりすることが可能です。&lt;br />
今回は、この共有メモリを用いてキャッシュの役割を果たすクラスを作成してみました。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】CLIで簡単にテキストに色を付ける方法</title><link>https://c-a-p-engineer.github.io/tech/2023/04/17/php-cli-text-color/</link><pubDate>Mon, 17 Apr 2023 13:00:00 +0900</pubDate><atom:modified>Mon, 17 Apr 2023 13:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2023/04/17/php-cli-text-color/</guid><description>&lt;h1 id="phpcliで簡単にテキストに色を付ける方法">【PHP】CLIで簡単にテキストに色を付ける方法&lt;/h1>
&lt;p>PHP で CLI 実行時に少々色を付けたいなと思って作ってみました。&lt;br />
ANSIエスケープコードを使用することでターミナル上で色が付きます。&lt;/p>
&lt;h2 id="サンプルコード">サンプルコード&lt;/h2>
&lt;p>サンプルコードです。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】Webクローラーを作ってみた</title><link>https://c-a-p-engineer.github.io/tech/2023/04/04/php-web-crawl/</link><pubDate>Tue, 04 Apr 2023 18:40:00 +0900</pubDate><atom:modified>Tue, 04 Apr 2023 18:40:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2023/04/04/php-web-crawl/</guid><description>&lt;h1 id="phpwebクローラーを作ってみた">【PHP】Webクローラーを作ってみた&lt;/h1>
&lt;p>PHP で自作のWebクローラーを作ってみた。&lt;/p>
&lt;h2 id="webクローラー説明">Webクローラー説明&lt;/h2>
&lt;p>WebクローラーはWebを巡回するものですが今回作ったのは以下のようなものです。&lt;/p>
&lt;ul>
&lt;li>対象のURLからのリンクを辿る&lt;/li>
&lt;li>特定のURL配下のものだけしか辿らない（無限にリンク先を辿ってしまうため&lt;/li>
&lt;li>タイトルとURLを保存する&lt;/li>
&lt;/ul>
&lt;p>本来のWebクローラーとは少々違いますが色々使えそうなのでブログにメモしておこうとこの記事を書いてます。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】ob_flushを使用して1秒毎に時刻を表示する方法</title><link>https://c-a-p-engineer.github.io/tech/2023/03/25/php-ob_flush/</link><pubDate>Sat, 25 Mar 2023 16:30:00 +0900</pubDate><atom:modified>Sat, 25 Mar 2023 16:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2023/03/25/php-ob_flush/</guid><description>&lt;h1 id="phpob_flushを使用して1秒毎に時刻を表示する方法">【PHP】ob_flushを使用して1秒毎に時刻を表示する方法&lt;/h1>
&lt;p>PHP で &lt;code>ob_flush&lt;/code> を使用して1秒毎に時刻を表示する方法。&lt;br />
この方法は、ウェブページ上でリアルタイムな情報を表示する際に役立ちます。&lt;/p>
&lt;h2 id="サンプルコード">サンプルコード&lt;/h2>
&lt;p>サンプルコードです。&lt;br />
1秒毎に1分間、時刻を出力します。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】AWSのlambdaを実行する</title><link>https://c-a-p-engineer.github.io/tech/2023/02/21/php-lambda-invoke/</link><pubDate>Tue, 21 Feb 2023 01:30:00 +0900</pubDate><atom:modified>Tue, 21 Feb 2023 01:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2023/02/21/php-lambda-invoke/</guid><description>&lt;h1 id="phpawsのlambdaを実行する">【PHP】AWSのlambdaを実行する&lt;/h1>
&lt;p>PHPでAWSのlambdaを実行する方法メモ&lt;/p>
&lt;h2 id="sdkのインストール">SDKのインストール&lt;/h2>
&lt;p>&lt;code>composer&lt;/code> を利用してAWS SDKをインストールします。&lt;/p>
&lt;pre tabindex="0">&lt;code>composer require aws/aws-sdk-php
&lt;/code>&lt;/pre>&lt;h2 id="lambda実行クラスコード">Lambda実行クラスコード&lt;/h2>
&lt;p>実行する際は &lt;strong>PHP側に実行権限を付与&lt;/strong> することを忘れないでください。&lt;br />
Lambdaを実行するクラス&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>AWS</category><category>AWS Lambda</category><category>PHP</category></item><item><title>【PHP】ブラウザで実行できるPHP環境のご紹介</title><link>https://c-a-p-engineer.github.io/tech/2023/02/19/php-online-exec/</link><pubDate>Sun, 19 Feb 2023 02:30:00 +0900</pubDate><atom:modified>Sun, 19 Feb 2023 02:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2023/02/19/php-online-exec/</guid><description>&lt;h1 id="phpブラウザで実行できるphp環境のご紹介">【PHP】ブラウザで実行できるPHP環境のご紹介&lt;/h1>
&lt;p>PHPブラウザで実行できるPHP環境のご紹介&lt;br />
どちらかを知っていれば基本的な用途には困ることはないかと思います。&lt;/p>
&lt;h2 id="3v4l">3v4l&lt;/h2>
&lt;p>&lt;a href="https://3v4l.org/" target="_blank" rel="nofollow noopener">3v4l&lt;/a>&lt;/p>
&lt;ul>
&lt;li>複数バージョンからの選択 or 複数バージョンの同時実行可能&lt;/li>
&lt;li>バージョンごとのパフォーマンス結果の表示&lt;/li>
&lt;li>シンタックスハイライト&lt;/li>
&lt;li>URLをそのままにコードを共有可能&lt;/li>
&lt;/ul>
&lt;h2 id="paizaio">paiza.io&lt;/h2>
&lt;p>&lt;a href="https://paiza.io/ja" target="_blank" rel="nofollow noopener">paiza.io&lt;/a>&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>オンラインツール</category><category>PHP</category></item><item><title>【PHP】DOMDocument で発生する文字化けの対策方法</title><link>https://c-a-p-engineer.github.io/tech/2023/01/28/php-domdocument-garbled-characters/</link><pubDate>Sat, 28 Jan 2023 10:10:00 +0900</pubDate><atom:modified>Sat, 28 Jan 2023 10:10:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2023/01/28/php-domdocument-garbled-characters/</guid><description>&lt;h1 id="phpdomdocument-で発生する文字化けの対策方法">【PHP】DOMDocument で発生する文字化けの対策方法&lt;/h1>
&lt;p>PHP DOMDocument を利用した際に発生する文字化けの対策方法です。&lt;/p>
&lt;h2 id="文字化けコード">文字化けコード&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$domDocument&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">DOMDocument&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$domDocument&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="na">loadHTML&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$html&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="原因">原因&lt;/h2>
&lt;p>&lt;code>loadHtml&lt;/code> は渡された文字列を &lt;code>ISO-8859-1&lt;/code> で解析するため。&lt;br />
&lt;a href="https://www.php.net/manual/ja/domdocument.loadhtml.php#52251" target="_blank" rel="nofollow noopener">PHP: DOMDocument::loadHTML - Manual&lt;/a>&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】DOMDocument を利用して HTMLを解析する</title><link>https://c-a-p-engineer.github.io/tech/2023/01/23/php-html-parse/</link><pubDate>Mon, 23 Jan 2023 18:30:00 +0900</pubDate><atom:modified>Mon, 23 Jan 2023 18:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2023/01/23/php-html-parse/</guid><description>&lt;h1 id="phpdomdocument-を利用して-htmlを解析する">【PHP】DOMDocument を利用して HTMLを解析する&lt;/h1>
&lt;p>PHP で &lt;code>DOMDocument&lt;/code> を利用して HTMLを解析する&lt;/p>
&lt;p>今回はPHPの &lt;code>DOMDocument&lt;/code> を利用してHTMLを解析してみます。&lt;br />
&lt;a href="https://www.php.net/manual/ja/class.domdocument.php" target="_blank" rel="nofollow noopener">PHP: DOMDocument - Manual&lt;/a>&lt;/p>
&lt;p>先に記載しておきますが &lt;strong>大変使いにくくかゆいところに手が届かないもの&lt;/strong> になります。&lt;br />
簡単な解析程度には使用できますがタグの属性など取れないこともありますのでHTML解析ライブラリを使用することをオススメします。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】XMLをパースして配列にする方法</title><link>https://c-a-p-engineer.github.io/tech/2022/12/23/php-xml-parse/</link><pubDate>Fri, 23 Dec 2022 00:30:00 +0900</pubDate><atom:modified>Fri, 23 Dec 2022 00:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/12/23/php-xml-parse/</guid><description>&lt;h1 id="phpxmlをパースして配列にする方法">【PHP】XMLをパースして配列にする方法&lt;/h1>
&lt;p>PHP でXMLをパースして配列にする方法&lt;/p>
&lt;h2 id="サンプル">サンプル&lt;/h2>
&lt;p>下記のサンプルはXMLをパースして配列にします。&lt;br />
実行確認出来るようにサンプルのため変数 &lt;code>$xml&lt;/code> に直接XMLを入れていますが、ローカルファイルであれば &lt;code>file_get_contents&lt;/code> を使用してファイルを取得してください。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】静的解析ツール phpstan を使って静的解析をしてみる。</title><link>https://c-a-p-engineer.github.io/tech/2022/11/19/php-phpstan/</link><pubDate>Sat, 19 Nov 2022 01:30:00 +0900</pubDate><atom:modified>Sat, 19 Nov 2022 01:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/11/19/php-phpstan/</guid><description>&lt;h1 id="php静的解析ツール-phpstan-を使ってみる">【PHP】静的解析ツール phpstan を使ってみる&lt;/h1>
&lt;p>PHP の 静的解析ツール phpstan を使って静的解析をしてみる。&lt;br />
&lt;a href="https://phpstan.org/">PHPStan&lt;/a>&lt;/p>
&lt;h2 id="インストール">インストール&lt;/h2>
&lt;p>&lt;code>composer&lt;/code> でサクッとインストール&lt;/p>
&lt;pre tabindex="0">&lt;code>composer require --dev phpstan/phpstan
&lt;/code>&lt;/pre>&lt;p>動作チェック&lt;/p>
&lt;pre tabindex="0">&lt;code>vendor/bin/phpstan analyse [ディレクトリ]
&lt;/code>&lt;/pre>&lt;p>Laravelで使用する際は &lt;code>larastan&lt;/code> があるのでそちらを使ってみるのも良いようです。&lt;br />
&lt;a href="https://github.com/nunomaduro/larastan" target="_blank" rel="nofollow noopener">nunomaduro/larastan&lt;/a>&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】クラス定数の存在チェック</title><link>https://c-a-p-engineer.github.io/tech/2022/10/27/php-class-const-exists/</link><pubDate>Sun, 30 Oct 2022 01:00:00 +0900</pubDate><atom:modified>Sun, 30 Oct 2022 01:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/10/27/php-class-const-exists/</guid><description>&lt;h1 id="phpクラス定数の存在チェック">【PHP】クラス定数の存在チェック&lt;/h1>
&lt;p>PHPでクラス定数の存在チェックをする方法&lt;/p>
&lt;h2 id="defined-を使う">defined を使う&lt;/h2>
&lt;p>&lt;code>defined&lt;/code> 関数を使用することでチェックが可能です。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Sample
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">class&lt;/span> &lt;span class="nc">Sample&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="no">CONST_SAMPLE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;sample&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// クラスを直接指定
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nx">defined&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s1">&amp;#39;Sample::CONST_SAMPLE&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">echo&lt;/span> &lt;span class="s1">&amp;#39;Sample::CONST_SAMPLE defined&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// クラス名の変数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nv">$className&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">Sample&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nx">defined&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">$className&lt;/span>&lt;span class="s2">::CONST_SAMPLE&amp;#34;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">echo&lt;/span> &lt;span class="s1">&amp;#39;$className::CONST_SAMPLE defined&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// クラスオブジェクト
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nv">$classObj&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nv">$className&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nx">defined&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="nx">get_class&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$classObj&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="s1">&amp;#39;::CONST_SAMPLE&amp;#39;&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">echo&lt;/span> &lt;span class="s1">&amp;#39;$classObj::CONST_SAMPLE defined&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.php.net/manual/ja/function.defined.php" target="_blank" rel="nofollow noopener">PHP: defined - Manual&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.php.net/manual/ja/function.defined.php#120920" target="_blank" rel="nofollow noopener">PHP: defined - Manual#ASchmidt at Anamera dot net&lt;/a>&lt;/li>
&lt;/ul></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】CLI で入力がなかったらタイムアウトさせる方法</title><link>https://c-a-p-engineer.github.io/tech/2022/10/02/php-cli-input-timeout/</link><pubDate>Sun, 02 Oct 2022 09:40:00 +0900</pubDate><atom:modified>Sun, 02 Oct 2022 09:40:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/10/02/php-cli-input-timeout/</guid><description>&lt;h1 id="phpcli-で入力がなかったらタイムアウトさせる方法">【PHP】CLI で入力がなかったらタイムアウトさせる方法&lt;/h1>
&lt;p>PHP で CLI で入力を求めた際、一定時間に入力されなかったらタイムアウトさせる方法&lt;/p>
&lt;h2 id="stream_selectを使用する">stream_selectを使用する&lt;/h2>
&lt;p>&lt;a href="https://www.php.net/manual/ja/function.stream-select.php" target="_blank" rel="nofollow noopener">stream_select&lt;/a> を使用して実現させます。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】composer dump-autoload 「A non-empty PSR-4 prefix must end with a namespace separator」エラー解決</title><link>https://c-a-p-engineer.github.io/tech/2022/06/23/composer-psr4-end-with-namespace-separator/</link><pubDate>Thu, 23 Jun 2022 12:00:00 +0900</pubDate><atom:modified>Thu, 23 Jun 2022 12:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/06/23/composer-psr4-end-with-namespace-separator/</guid><description>&lt;h1 id="phpcomposer-dump-autoload-a-non-empty-psr-4-prefix-must-end-with-a-namespace-separatorエラー解決">【PHP】composer dump-autoload 「A non-empty PSR-4 prefix must end with a namespace separator」エラー解決&lt;/h1>
&lt;p>&lt;code>composer dump-autoload&lt;/code> 実行時に &lt;code>A non-empty PSR-4 prefix must end with a namespace separator&lt;/code> エラーが発生した際の解決メモ&lt;/p>
&lt;h2 id="現象">現象&lt;/h2>
&lt;p>&lt;code>composer dump-autoload&lt;/code> を実行した際に下記のエラーが出てくる。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>php</category><category>composer</category><category>php</category></item><item><title>【PHP】CLIで進捗表示を行うプログレスバーを出力する方法</title><link>https://c-a-p-engineer.github.io/tech/2022/06/04/php-cli-progressbar/</link><pubDate>Sat, 04 Jun 2022 15:00:00 +0900</pubDate><atom:modified>Sat, 04 Jun 2022 15:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/06/04/php-cli-progressbar/</guid><description>&lt;h1 id="phpcliで進捗表示を行うプログレスバーを出力する方法">【PHP】CLIで進捗表示を行うプログレスバーを出力する方法&lt;/h1>
&lt;p>PHP の CLI で進捗表示を行うプログレスバーを出力する方法メモ&lt;/p>
&lt;h2 id="キャリッジリターンを使用する">キャリッジリターンを使用する&lt;/h2>
&lt;p>キャリッジリターンは行末から行頭に戻すコードです。&lt;/p>
&lt;blockquote>
&lt;p>行末から行頭に戻す復帰コード&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>&lt;a href="https://ja.wikipedia.org/wiki/%E3%82%AD%E3%83%A3%E3%83%AA%E3%83%83%E3%82%B8%E3%83%BB%E3%83%AA%E3%82%BF%E3%83%BC%E3%83%B3" target="_blank" rel="nofollow noopener">キャリッジ・リターン - Wikipedia&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>これをすると以下のようにすると今までの出力の行頭に移動して出力済みの文字を上書きを行う訳です。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】半角、全角を判断して文字幅を計算する　mb_strwidth</title><link>https://c-a-p-engineer.github.io/tech/2022/05/28/php-mb_strwidth/</link><pubDate>Sat, 28 May 2022 14:30:00 +0900</pubDate><atom:modified>Sat, 28 May 2022 14:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/05/28/php-mb_strwidth/</guid><description>&lt;h1 id="php半角全角を判断して文字幅を計算するmb_strwidth">【PHP】半角、全角を判断して文字幅を計算する　mb_strwidth&lt;/h1>
&lt;p>PHPで半角、全角を判断して文字幅を計算する mb_strwidth の使用方法。&lt;br />
&lt;a href="https://www.php.net/manual/ja/function.mb-strwidth.php" target="_blank" rel="nofollow noopener">PHP: mb_strwidth - Manual&lt;/a>&lt;/p>
&lt;h2 id="mb_strwidth-を使用する">mb_strwidth を使用する&lt;/h2>
&lt;p>&lt;code>mb_strwidth&lt;/code> を使用すると文字幅の計算ができます。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">mb_strwidth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">string&lt;/span> &lt;span class="nv">$string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">?&lt;/span>&lt;span class="nx">string&lt;/span> &lt;span class="nv">$encoding&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">int&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="サンプル">サンプル&lt;/h2>
&lt;p>英数字、半角カナ、全角文字、絵文字にも対応しています。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】画像に文字を追加する</title><link>https://c-a-p-engineer.github.io/tech/2022/05/28/php-image-text/</link><pubDate>Sat, 28 May 2022 08:30:00 +0900</pubDate><atom:modified>Sat, 28 May 2022 08:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/05/28/php-image-text/</guid><description>&lt;h1 id="php画像に文字を追加する">【PHP】画像に文字を追加する&lt;/h1>
&lt;p>PHPで画像に文字を追加します。&lt;/p>
&lt;h2 id="環境">環境&lt;/h2>
&lt;ul>
&lt;li>PHP8.1&lt;/li>
&lt;/ul>
&lt;h2 id="前準備">前準備&lt;/h2>
&lt;ul>
&lt;li>画像処理（GD）ライブラリの導入
&lt;ul>
&lt;li>&lt;a href="https://www.php.net/manual/ja/book.image.php" target="_blank" rel="nofollow noopener">PHP: GD - Manual&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>フォントの用意
&lt;ul>
&lt;li>&lt;a href="https://github.com/ookamiinc/kinto" target="_blank" rel="nofollow noopener">ookamiinc/kinto: 均等 — Kinto is a Japanese font family adapted to match size &amp;amp; balance with Latin characters in user interfaces. A project based off Google Noto fonts.&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>文字列を追加するテンプレート画像の用意&lt;/li>
&lt;/ul>
&lt;p>GDライブラリは標準で入っていないので環境によっては面倒かとは思います。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】PHP Fatal error: Constant expression contains invalid operations 解決方法</title><link>https://c-a-p-engineer.github.io/tech/2022/05/21/php-contains-invalid-operations/</link><pubDate>Sat, 21 May 2022 13:30:00 +0900</pubDate><atom:modified>Sat, 21 May 2022 13:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/05/21/php-contains-invalid-operations/</guid><description>&lt;h1 id="phpphp-fatal-error-constant-expression-contains-invalid-operations-解決方法">【PHP】PHP Fatal error: Constant expression contains invalid operations 解決方法&lt;/h1>
&lt;p>&lt;code>PHP Fatal error: Constant expression contains invalid operations&lt;/code> 解決方法メモ&lt;/p>
&lt;h2 id="現象">現象&lt;/h2>
&lt;p>以下のようなコードの場合に &lt;code>PHP Fatal error: Constant expression contains invalid operations&lt;/code> というエラーが発生します。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Now&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">public&lt;/span> &lt;span class="nv">$now&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$class&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Now&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">var_dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$class&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="na">now&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="原因">原因&lt;/h2>
&lt;p>原因はプロパティ宣言時に &lt;code>time()&lt;/code> を実行していることです。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】PHP Fatal error: Uncaught TypeError: Unsupported operand types 解決方法</title><link>https://c-a-p-engineer.github.io/tech/2022/05/22/php-unsupported-operand-types/</link><pubDate>Sat, 21 May 2022 13:30:00 +0900</pubDate><atom:modified>Sat, 21 May 2022 13:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/05/22/php-unsupported-operand-types/</guid><description>&lt;h1 id="phpfatal-error-uncaught-typeerror-unsupported-operand-types-解決方法">【PHP】Fatal error: Uncaught TypeError: Unsupported operand types 解決方法&lt;/h1>
&lt;p>&lt;code>PHP Fatal error: Constant expression contains invalid operations&lt;/code> 解決方法メモ&lt;/p>
&lt;h2 id="現象">現象&lt;/h2>
&lt;p>以下のようなコードの場合に &lt;code>PHP Fatal error: Uncaught TypeError: Unsupported operand types&lt;/code> というエラーが発生します。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">echo&lt;/span> &lt;span class="nv">$i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="原因">原因&lt;/h2>
&lt;p>型が合わないというエラーです。&lt;br />
今回の原因は &lt;code>int&lt;/code> と &lt;code>string&lt;/code> を足し算しようとしてるためです。&lt;br />
ちなみに今回のエラーは &lt;code>7.2&lt;/code> 系から出るようになったようです。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】引数にint型を指定しているとint型を超えた値を渡すとエラーになる</title><link>https://c-a-p-engineer.github.io/tech/2022/04/14/php-typehinting-int-overflow/</link><pubDate>Wed, 13 Apr 2022 02:50:00 +0900</pubDate><atom:modified>Wed, 13 Apr 2022 02:50:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/04/14/php-typehinting-int-overflow/</guid><description>&lt;h1 id="php引数にint型を指定しているとint型を超えた値を渡すとエラーになる">【PHP】引数にint型を指定しているとint型を超えた値を渡すとエラーになる&lt;/h1>
&lt;p>PHPで関数やメソッドにint型を指定しているとint型を超えた値を渡すとエラーになります。&lt;br />
&lt;code>Argument #1 ($x) must be of type int, float given,&lt;/code> の原因と解決方法。&lt;/p>
&lt;h2 id="エラーが発生しない">エラーが発生しない&lt;/h2>
&lt;p>PHPは動的型付けなので引数がint型を指定されていてもstringやfloatをint型にして対応してくれます。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】URLを解析する parse_url</title><link>https://c-a-p-engineer.github.io/tech/2022/03/19/php-parse_url/</link><pubDate>Sat, 19 Mar 2022 04:00:00 +0900</pubDate><atom:modified>Sat, 19 Mar 2022 04:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/03/19/php-parse_url/</guid><description>&lt;h1 id="phpurlを解析する-parse_url">【PHP】URLを解析する parse_url&lt;/h1>
&lt;p>URLを解析することができる &lt;code>parse_url&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.php.net/manual/ja/function.parse-url.php" target="_blank" rel="nofollow noopener">PHP: parse_url - Manual&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="url-を解析してみる">URL を解析してみる&lt;/h2>
&lt;p>実際にPHPManualに記載されている例にならって解析をさせてみます。&lt;br />
&lt;a href="https://www.php.net/manual/ja/function.parse-url.php" target="_blank" rel="nofollow noopener">PHP: parse_url - Manual 例1&lt;/a>&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】github のリポジトリから直接 composer require でインストール</title><link>https://c-a-p-engineer.github.io/tech/2022/02/07/composer-vcs-github/</link><pubDate>Mon, 07 Feb 2022 09:00:00 +0900</pubDate><atom:modified>Mon, 07 Feb 2022 09:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/02/07/composer-vcs-github/</guid><description>&lt;h1 id="phpgithub-のリポジトリから直接-composer-require-でインストール">【PHP】github のリポジトリから直接 composer require でインストール&lt;/h1>
&lt;p>github のリポジトリから直接 composer require でインストールするメモ。&lt;br />
OSSのリポジトリの突然の削除や非公開の自作のパッケージを使用する際に使用できる方法です。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>php</category><category>composer</category><category>php</category></item><item><title>PhpSpreadsheet を少しでも軽くする方法</title><link>https://c-a-p-engineer.github.io/tech/2022/01/30/phpspreadsheet-speedup/</link><pubDate>Sun, 30 Jan 2022 12:00:00 +0900</pubDate><atom:modified>Sun, 30 Jan 2022 12:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/01/30/phpspreadsheet-speedup/</guid><description>&lt;h1 id="phpspreadsheet-を少しでも軽くする方法">PhpSpreadsheet を少しでも軽くする方法&lt;/h1>
&lt;p>&lt;code>PHP&lt;/code> で &lt;code>Excel&lt;/code> を扱える &lt;code>PhpSpreadsheet&lt;/code> がとにかく重く、メモリを使うので少しでも軽くする方法メモ。&lt;/p>
&lt;h2 id="サンプル">サンプル&lt;/h2>
&lt;p>書き込み、追記でないのであれば読み取りモードにすることで早くなります。&lt;br />
また最後にメモリを解放することでメモリの圧迫にも対応&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】ignore_user_abortで接続が切れても処理を実行させ続ける</title><link>https://c-a-p-engineer.github.io/tech/2022/01/08/php-ignore_user_abort/</link><pubDate>Sat, 08 Jan 2022 15:00:00 +0900</pubDate><atom:modified>Sat, 08 Jan 2022 15:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/01/08/php-ignore_user_abort/</guid><description>&lt;h1 id="phpignore_user_abortで接続が切れても処理を実行させ続ける">【PHP】ignore_user_abortで接続が切れても処理を実行させ続ける。&lt;/h1>
&lt;p>PHPは接続が切られると処理が中断させられますが &amp;lsquo;ignore_user_abort&amp;rsquo; を使用すると接続が切れても処理を実行させ続ける事ができます。&lt;br />
&lt;a href="https://www.php.net/manual/ja/function.ignore-user-abort.php" target="_blank" rel="nofollow noopener">PHP: ignore_user_abort - Manual&lt;/a>&lt;/p>
&lt;div class="notices warning" data-title="Warning">
&lt;strong>注意&lt;/strong>&lt;br />
ブラウザからの接続が切れても裏でプロセスが走り続けるので使い所によってはプロセスが大量に発生する可能性があります。&lt;br />
それだけに使い所が難しいものになると思っています。
&lt;/div>
&lt;h2 id="サンプル">サンプル&lt;/h2>
&lt;p>公式からのサンプルを元にしています。&lt;br />
&lt;a href="https://www.php.net/manual/ja/function.ignore-user-abort.php#example-3497" target="_blank" rel="nofollow noopener">PHP: ignore_user_abort - Manual#example1&lt;/a>&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】PHPでツイートする</title><link>https://c-a-p-engineer.github.io/tech/2021/12/19/php-tweet/</link><pubDate>Sun, 19 Dec 2021 04:00:00 +0900</pubDate><atom:modified>Sun, 19 Dec 2021 04:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/12/19/php-tweet/</guid><description>&lt;h1 id="phpphpでツイートする">【PHP】PHPでツイートする&lt;/h1>
&lt;p>PHPで簡単にツイートをする方法&lt;/p>
&lt;h2 id="1-twitter-developer">1. Twitter Developer&lt;/h2>
&lt;p>&lt;a href="https://developer.twitter.com/" target="_blank" rel="nofollow noopener">Twitter Developer&lt;/a> に登録して、各種キーを確保してください。&lt;/p>
&lt;p>だいぶ前に登録したのでうろ覚えなので詳しくは &lt;a href="https://www.google.com/search?q=Twitter+Developer+%E7%99%BB%E9%8C%B2%E6%96%B9%E6%B3%95" target="_blank" rel="nofollow noopener">Google先生&lt;/a> に聞いてください。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>Twitter</category><category>PHP</category></item><item><title>【PHPUnit】PHPUnit This element is not expected..</title><link>https://c-a-p-engineer.github.io/tech/2021/12/18/php-unit-log-expected/</link><pubDate>Sat, 18 Dec 2021 13:00:00 +0900</pubDate><atom:modified>Sat, 18 Dec 2021 13:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/12/18/php-unit-log-expected/</guid><description>&lt;h1 id="phpunitphpunit-this-element-is-not-expected">【PHPUnit】PHPUnit This element is not expected..&lt;/h1>
&lt;p>PHPUnit を実行すると以下のようなエラーが出る。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl"> The following problems have been detected:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Line 38:p
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - Element &lt;span class="s1">&amp;#39;log&amp;#39;&lt;/span>: This element is not expected..
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="原因">原因&lt;/h2>
&lt;p>原因は PHPUnit9.3 の場合、&lt;code>log&lt;/code> の記載方法が変わった。&lt;br />
&lt;a href="https://github.com/sebastianbergmann/phpunit/blob/9.3.0/ChangeLog-9.3.md#configuration-of-code-coverage-and-logging-in-phpunitxml" target="_blank" rel="nofollow noopener">phpunit/ChangeLog-9.3&lt;/a>&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHPUnit</category><category>PHP</category></item><item><title>【PHP】PHPで簡単スクレイピング</title><link>https://c-a-p-engineer.github.io/tech/2021/12/17/php-scraping/</link><pubDate>Fri, 17 Dec 2021 03:30:00 +0900</pubDate><atom:modified>Fri, 17 Dec 2021 03:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/12/17/php-scraping/</guid><description>&lt;h1 id="phpphpで簡単スクレイピング">【PHP】PHPで簡単スクレイピング&lt;/h1>
&lt;p>PHPで簡単にスクレイピングを始める&lt;/p>
&lt;h2 id="環境">環境&lt;/h2>
&lt;ul>
&lt;li>PHP7.1 より上のバージョン&lt;/li>
&lt;li>&lt;a href="https://github.com/FriendsOfPHP/Goutte">Goutte - GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="パッケージのインストール">パッケージのインストール&lt;/h2>
&lt;p>&lt;code>composer&lt;/code> を利用してインストール&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">composer require fabpot/goutte
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使い方">使い方&lt;/h2>
&lt;p>基本的な使い方は GitHub に記載されています。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/FriendsOfPHP/Goutte">Goutte - GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="アクセス">アクセス&lt;/h3>
&lt;p>指定のURLにアクセスする。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>スクレイピング</category><category>PHP</category></item><item><title>【PHP】柔らかいプロパティの扱い __set __get の罠</title><link>https://c-a-p-engineer.github.io/tech/2021/11/25/php-get-set/</link><pubDate>Thu, 25 Nov 2021 09:00:00 +0900</pubDate><atom:modified>Fri, 26 Nov 2021 09:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/11/25/php-get-set/</guid><description>&lt;h1 id="php柔らかいプロパティの扱い-__set-__get-の罠">【PHP】柔らかいプロパティの扱い __set __get の罠&lt;/h1>
&lt;p>柔軟な PHP の柔らかいプロパティの扱いでマジックメソッド &lt;code>__set&lt;/code> &lt;code>__get&lt;/code> の罠があります。&lt;br />
&lt;a href="https://www.php.net/manual/ja/language.oop5.magic.php" target="_blank" rel="nofollow noopener">PHP: マジックメソッド - Manual&lt;/a>&lt;/p>
&lt;h2 id="確認環境">確認環境&lt;/h2>
&lt;ul>
&lt;li>PHP 7.3.0-8.0.13
&lt;ul>
&lt;li>&lt;a href="https://3v4l.org/">https://3v4l.org/&lt;/a> 上で確認&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="phpはとても柔軟">PHPはとても柔軟&lt;/h2>
&lt;p>PHP はとても柔軟な言語で以下のように宣言していないプロパティを実行しても柔軟に吸収をしてくれます。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】PHP_CodeSniffier を使用してコードをPSR（コーディング規約）に基づいて整形する</title><link>https://c-a-p-engineer.github.io/tech/2021/10/22/php_codesniffer/</link><pubDate>Fri, 22 Oct 2021 06:00:00 +0900</pubDate><atom:modified>Fri, 22 Oct 2021 06:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/10/22/php_codesniffer/</guid><description>&lt;h1 id="phpphp_codesniffier-を使用してコードをpsrコーディング規約に基づいて整形する">【PHP】PHP_CodeSniffier を使用してコードをPSR（コーディング規約）に基づいて整形する&lt;/h1>
&lt;p>PHP のパッケージ、 &lt;code>PHP_CodeSniffer&lt;/code> を使用してPSR（PHPコーディング規約）に基づいて整形させる方法。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】mkdir でファイル作成時に複数階層を一気に作る</title><link>https://c-a-p-engineer.github.io/tech/2021/07/29/php-mkdir-hierarchy/</link><pubDate>Thu, 29 Jul 2021 08:00:00 +0900</pubDate><atom:modified>Thu, 29 Jul 2021 08:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/07/29/php-mkdir-hierarchy/</guid><description>&lt;h1 id="phpmkdir-でファイル作成時に複数階層を一気に作る">【PHP】mkdir でファイル作成時に複数階層を一気に作る&lt;/h1>
&lt;p>PHPで mkdir でファイルを作成する際に複数階層のディレクトリを一気に作る方法メモ&lt;/p>
&lt;h2 id="サンプルコード">サンプルコード&lt;/h2>
&lt;p>これだけで可能です。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">mkdir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;/test1/test2&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mo">0777&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">true&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>第一引数の &lt;code>$directory&lt;/code> に作成したディレクトリを指定。&lt;br />
第三引数の &lt;code>$recursive&lt;/code> に &lt;code>true&lt;/code> を指定すると途中のディレクトリがない場合に作成してくれます。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】厳密な型付けをしよう</title><link>https://c-a-p-engineer.github.io/tech/2021/07/24/php-strict_types/</link><pubDate>Sat, 24 Jul 2021 07:30:00 +0900</pubDate><atom:modified>Sat, 24 Jul 2021 07:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/07/24/php-strict_types/</guid><description>&lt;h1 id="php厳密な型付けをしよう">【PHP】厳密な型付けをしよう&lt;/h1>
&lt;p>PHPは&lt;strong>動的型付け言語&lt;/strong>として知られていますが、厳密な型付けが出来ます。&lt;br />
必要、不必要を判断してPHPで厳密な型付けをしてみましょう。&lt;/p>
&lt;h2 id="環境">環境&lt;/h2>
&lt;ul>
&lt;li>PHP 7.0.0以上&lt;br />
PHP7の時に実装された機能になります。&lt;/li>
&lt;li>&lt;a href="https://www.php.net/manual/ja/migration70.new-features.php" target="_blank" rel="nofollow noopener">PHP 5.6.x から PHP 7.0.x への移行 (新機能)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="使ってみる">使ってみる&lt;/h2>
&lt;p>PHPファイルの先頭行に以下を追加。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>composer の package を自作してみる</title><link>https://c-a-p-engineer.github.io/tech/2021/07/24/composer-package-self/</link><pubDate>Sat, 24 Jul 2021 04:00:00 +0900</pubDate><atom:modified>Sat, 24 Jul 2021 04:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/07/24/composer-package-self/</guid><description>&lt;h1 id="composer-の-package-を自作してみる">composer の package を自作してみる&lt;/h1>
&lt;p>composer の package を自作してみました。&lt;/p>
&lt;p>package を作りのテンプレートに以下のようなものがありますが、今回は最小構成で簡単に作ってみました。&lt;br />
&lt;a href="https://github.com/php-pds/skeleton" target="_blank" rel="nofollow noopener">php-pds/skeleton: Standard PHP package skeleton.&lt;/a>&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>composer</category><category>PHP</category></item><item><title>【PHP】RSSを取得・解析する</title><link>https://c-a-p-engineer.github.io/tech/2021/07/10/php-rss/</link><pubDate>Sat, 10 Jul 2021 16:30:00 +0900</pubDate><atom:modified>Sat, 10 Jul 2021 16:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/07/10/php-rss/</guid><description>&lt;h1 id="rssを取得解析する">RSSを取得、解析する&lt;/h1>
&lt;p>PHPを使用して RSS を解析します。&lt;br />
RSSの取得先は&lt;a href="https://b.hatena.ne.jp/" target="_blank" rel="nofollow noopener">はてなブックマーク&lt;/a> を使用しています。&lt;/p>
&lt;h2 id="rss取得">RSS取得&lt;/h2>
&lt;p>RSS の XML を取得して PHP の配列にするだけの処理です。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】TCPDF で HTML 上で改ページを行う</title><link>https://c-a-p-engineer.github.io/tech/2021/06/18/tcpdf-br-paging/</link><pubDate>Fri, 18 Jun 2021 02:30:00 +0900</pubDate><atom:modified>Fri, 18 Jun 2021 02:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/06/18/tcpdf-br-paging/</guid><description>&lt;h1 id="tcpdf-で-html-上で改ページを行う">TCPDF で HTML 上で改ページを行う&lt;/h1>
&lt;p>PHP の PDF 出力用ライブラリ TCPDF で HTML 上で改ページを行う方法。&lt;/p>
&lt;h2 id="サンプルコード">サンプルコード&lt;/h2>
&lt;p>&lt;code>&amp;lt;br pagebreak=&amp;quot;true&amp;quot;/&amp;gt;&lt;/code> を追加するだけで可能です。&lt;br />
サンプルでは &lt;code>AddPage()&lt;/code> を一回しかして居ないのに2ページ出てきます。&lt;br />
※ライブラリは別途、自分で入れてください。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>TCPDF</category><category>PHP</category></item><item><title>【PHP】関数 empty は罠</title><link>https://c-a-p-engineer.github.io/tech/2021/06/04/php-empty/</link><pubDate>Fri, 04 Jun 2021 10:30:00 +0900</pubDate><atom:modified>Fri, 04 Jun 2021 10:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/06/04/php-empty/</guid><description>&lt;h1 id="関数-empty-は罠">関数 empty は罠&lt;/h1>
&lt;p>PHPの関数 &lt;code>empty&lt;/code> はとても使いやすく入力値の検査などに使いやすいですがこれが罠なんです。&lt;br />
・&lt;a href="https://www.php.net/manual/ja/function.empty.php" target="_blank" rel="nofollow noopener">PHP: empty - Manual&lt;/a>&lt;/p>
&lt;h2 id="empty-の使いやすさ">empty の使いやすさ&lt;/h2>
&lt;p>PHPマニュアルにある &lt;code>empty&lt;/code> の説明はこれだけです。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】配列を扱う時にとても有用な array_column</title><link>https://c-a-p-engineer.github.io/tech/2021/06/02/php-array_column/</link><pubDate>Wed, 02 Jun 2021 04:30:00 +0900</pubDate><atom:modified>Wed, 02 Jun 2021 04:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/06/02/php-array_column/</guid><description>&lt;h1 id="配列を扱う時にとても有用な-array_column">配列を扱う時にとても有用な array_column&lt;/h1>
&lt;p>&lt;code>PHP&lt;/code> で配列を扱う時にとても有用な関数 &lt;a href="https://www.php.net/manual/ja/function.array-column.php" target="_blank" rel="nofollow noopener">array_column&lt;/a> をご紹介します。&lt;br />
PHPマニュアル上でとても有用な例まで載っているのですがあまりこのような使われ方をせずに &lt;code>for&lt;/code> や &lt;code>foreach&lt;/code> を使用しているのを多々見るので今回記事化しました。&lt;br />
&lt;code>array_column&lt;/code> を使用すれば例えばセレクトボックスに入れるデータなど一括で簡単に作れますので作れます。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHPUnit】メソッド内で連続でPOST、GETなどの送信すると前のログイン情報を引き継いでしまう？</title><link>https://c-a-p-engineer.github.io/tech/2021/06/01/phpunit-session-destroy/</link><pubDate>Tue, 01 Jun 2021 10:00:00 +0900</pubDate><atom:modified>Tue, 01 Jun 2021 10:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/06/01/phpunit-session-destroy/</guid><description>&lt;h1 id="連続でpostgetなどの送信すると前のログイン情報を引き継いでしまう">連続でPOST、GETなどの送信すると前のログイン情報を引き継いでしまう？&lt;/h1>
&lt;p>&lt;code>PHPUnit&lt;/code> でメソッド内で連続で &lt;code>POST&lt;/code>、&lt;code>GET&lt;/code>などの送信すると前のログイン情報を引き継いでしまう？現象を確認しました。&lt;br />
テストの都合上 &lt;code>PHPUnit&lt;/code> で1メソッド内で連続で &lt;code>POST&lt;/code>、&lt;code>GET&lt;/code> など行いました。&lt;br />
※通常ではログイン状態確認テストと未ログイン状態確認テストなど別に書くと思われますが特殊なケースです。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHPUnit</category><category>テスト</category><category>PHP</category></item><item><title>【PHP】strtotime バグ？オーバーフロー？加減算時の罠</title><link>https://c-a-p-engineer.github.io/tech/2021/05/22/php-strtotime/</link><pubDate>Sat, 22 May 2021 15:30:00 +0900</pubDate><atom:modified>Sat, 22 May 2021 15:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/05/22/php-strtotime/</guid><description>&lt;h1 id="strtotime-でのオーバーフロー-加減算時の罠">strtotime でのオーバーフロー？ 加減算時の罠&lt;/h1>
&lt;p>PHP の文字列から日付に変換する &lt;code>strtotime&lt;/code> の関数には加算、減算発生する際などに発生する様々な罠があります。&lt;br />
今回その罠をご紹介。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】PHPでAPIドキュメント（API Blueprint &amp; aglio）をスクレイピングする。</title><link>https://c-a-p-engineer.github.io/tech/2021/05/22/php-aglio-scraping/</link><pubDate>Sat, 22 May 2021 07:30:00 +0900</pubDate><atom:modified>Sat, 22 May 2021 07:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/05/22/php-aglio-scraping/</guid><description>&lt;h1 id="phpでapiドキュメントapi-blueprint--aglioをスクレイピングする">PHPでAPIドキュメント（API Blueprint &amp;amp; aglio）をスクレイピングする。&lt;/h1>
&lt;p>&lt;code>API Blueprint&lt;/code> &amp;amp; &lt;code>aglio&lt;/code> で出力されたAPIドキュメントをPHPを利用してスクレイピングしてみます。&lt;br />
APIドキュメントを解析 → 自動テスト出来たら良いなと思いやってみました。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】PHPを使って簡単にスクレイピングしてみる</title><link>https://c-a-p-engineer.github.io/tech/2021/05/21/php-scraping/</link><pubDate>Fri, 21 May 2021 13:00:00 +0900</pubDate><atom:modified>Fri, 21 May 2021 13:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/05/21/php-scraping/</guid><description>&lt;h1 id="php-を使用して簡単にスクレイピングをしてみる">PHP を使用して簡単にスクレイピングをしてみる&lt;/h1>
&lt;p>データの解析のため、PHPにスクレイピングをさせてみました。&lt;/p>
&lt;h2 id="サンプル">サンプル&lt;/h2>
&lt;p>サンプルは Google から &lt;code>png&lt;/code> 形式の画像を抜き出しを行っています。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】ノーブレークスペース（\u00a0）への対処</title><link>https://c-a-p-engineer.github.io/tech/2021/05/20/php-nobreak-space/</link><pubDate>Thu, 20 May 2021 11:00:00 +0900</pubDate><atom:modified>Thu, 20 May 2021 11:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/05/20/php-nobreak-space/</guid><description>&lt;h1 id="ノーブレークスペースu00a0への対処">ノーブレークスペース（\u00a0）への対処&lt;/h1>
&lt;p>&lt;code>HTML&lt;/code> を解析するプログラムを書いていたら置換などが出来ない 空白（&lt;code> &lt;/code>） を発見しました。&lt;/p>
&lt;h2 id="調査">調査&lt;/h2>
&lt;p>該当の文字列のユニコードの値を取得するため &lt;code>json&lt;/code> にしてました。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-php:sample.php" data-lang="php:sample.php">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$html&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;hoge piyo&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">var_dump&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">json_encode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$html&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">true&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>※サンプルの空白は通常のスペースになっています。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>HTML</category><category>PHP</category><category>PHP</category></item><item><title>【PHP】Warning: exec(): Unable to fork の対処</title><link>https://c-a-p-engineer.github.io/tech/2021/04/23/php-exec-unable-fork/</link><pubDate>Fri, 23 Apr 2021 12:00:00 +0900</pubDate><atom:modified>Fri, 23 Apr 2021 12:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/04/23/php-exec-unable-fork/</guid><description>&lt;h1 id="warning-exec-unable-to-fork-の対処">Warning: exec(): Unable to fork の対処&lt;/h1>
&lt;p>PHP で &lt;code>exec()&lt;/code> 使用時に &lt;code>Warning: exec(): Unable to fork&lt;/code> が発生することがあります。&lt;br />
その対処方法です。&lt;/p>
&lt;h2 id="原因">原因&lt;/h2>
&lt;p>原因はいくつか理由があります。&lt;/p>
&lt;ul>
&lt;li>権限がない&lt;/li>
&lt;li>プロセス数上限&lt;/li>
&lt;/ul>
&lt;h2 id="対処方法">対処方法&lt;/h2>
&lt;h3 id="権限付与">権限付与&lt;/h3>
&lt;p>例えば &lt;code>exec('rm -r hoge.txt')&lt;/code> 実行時に &lt;code>hoge.txt&lt;/code> を削除する権限がない場合に発生します。&lt;br />
そのため権限を変更して対応するが可能です。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>PHP で Database の Tableを丸ごとコピー</title><link>https://c-a-p-engineer.github.io/tech/2021/04/10/php-database-copy/</link><pubDate>Sat, 10 Apr 2021 10:00:00 +0900</pubDate><atom:modified>Sat, 10 Apr 2021 10:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/04/10/php-database-copy/</guid><description>&lt;h1 id="php-で-database-の-tableを丸ごとコピー">PHP で Database の Tableを丸ごとコピー&lt;/h1>
&lt;p>テストをする際にテスト用のDBを整備するのが面倒だったのでPHPでDatabaseのTable定義を使用してテーブルのコピーを作成するようにしました。&lt;br />
PHPUnitを使用する際など一々Databaseを整備する必要がなくなるのでとても有用で PHPUnit 実行前に行うと整備する手間がなくなります。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>DB</category><category>PHP</category></item><item><title>【PHP】サブフォルダ内のファイルをまとめて取得する</title><link>https://c-a-p-engineer.github.io/tech/2021/03/20/php-getfiles/</link><pubDate>Sat, 20 Mar 2021 10:00:00 +0900</pubDate><atom:modified>Sat, 20 Mar 2021 10:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/03/20/php-getfiles/</guid><description>&lt;h1 id="php-サブフォルダ内のファイルを纏めて取得する">PHP サブフォルダ内のファイルを纏めて取得する&lt;/h1>
&lt;p>PHP サブフォルダ内のファイルをまとめて取得する。&lt;/p>
&lt;h2 id="ファイルの取得">ファイルの取得&lt;/h2>
&lt;p>以下の2つを使用します。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.php.net/manual/ja/class.recursivedirectoryiterator.php" target="_blank" rel="nofollow noopener">RecursiveIteratorIterator - Manual - PHP&lt;/a>&lt;br />
再帰的なイテレータの反復処理に使用します。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>PHPUnit のテスト用のテストサンプル</title><link>https://c-a-p-engineer.github.io/tech/2021/03/19/phpunit-test-sample/</link><pubDate>Fri, 19 Mar 2021 15:00:00 +0900</pubDate><atom:modified>Fri, 19 Mar 2021 15:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/03/19/phpunit-test-sample/</guid><description>&lt;h1 id="phpunit-のテスト用のテストサンプル">PHPUnit のテスト用のテストサンプル&lt;/h1>
&lt;p>以前の &lt;a href="https://c-a-p-engineer.github.io/blog/2021-03-17-phpunit-hook/" target="_blank">PHPUnit テスト実行時に利用可能なフックインターフェイス&lt;/a> のテスト用のテストサンプルを作りました。&lt;br />
これは PHPUnit のフックインターフェイスのテスト用のテストサンプル。&lt;br />
PHPUnit の Error や Warning など色んなテスト結果出力させます。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHPUnit</category><category>テスト</category><category>PHP</category></item><item><title>PHPUnit テスト実行時に利用可能なフックインターフェイス</title><link>https://c-a-p-engineer.github.io/tech/2021/03/17/phpunit-hook/</link><pubDate>Wed, 17 Mar 2021 18:00:00 +0900</pubDate><atom:modified>Wed, 17 Mar 2021 18:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/03/17/phpunit-hook/</guid><description>&lt;h1 id="phpunit-テスト実行時に利用可能なフックインターフェイス">PHPUnit テスト実行時に利用可能なフックインターフェイス&lt;/h1>
&lt;p>PHPUnit を拡張してテスト実行時にテストの成功や失敗、エラー、終了などをフックするインターフェイスを実装する。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHPUnit</category><category>テスト</category><category>PHP</category></item><item><title>composer メモリオーバー対策</title><link>https://c-a-p-engineer.github.io/tech/2021/03/11/php-composer/</link><pubDate>Thu, 11 Mar 2021 09:00:00 +0900</pubDate><atom:modified>Thu, 11 Mar 2021 09:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/03/11/php-composer/</guid><description>&lt;h1 id="composer-メモリオーバー対策">composer メモリオーバー対策&lt;/h1>
&lt;p>&lt;code>composer&lt;/code> を使用するとたまに使用可能メモリを超えた場合にメモリオーバーエラーが発生します。&lt;br />
その時の対処方法のメモ。&lt;/p>
&lt;h2 id="エラー">エラー&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">composer install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PHP Fatal error: Allowed memory size of &lt;span class="m">2097152&lt;/span> bytes exhausted &lt;span class="o">(&lt;/span>tried to allocate &lt;span class="m">1974272&lt;/span> bytes&lt;span class="o">)&lt;/span> in Unknown on line &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="メモリ制限解除">メモリ制限解除&lt;/h2>
&lt;p>&lt;code>composer&lt;/code> には &lt;code>COMPOSER_MEMORY_LIMIT&lt;/code> という環境変数があるので &lt;code>COMPOSER_MEMORY_LIMIT=-1&lt;/code> を付けると &lt;code>composer&lt;/code> のメモリ制限がなくなります。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>php</category><category>composer</category><category>php</category></item><item><title>【PHP】ReflectionClass を使ってクラスの private property・method に読み書き・実行する方法</title><link>https://c-a-p-engineer.github.io/tech/2021/03/02/php-reflectionclass/</link><pubDate>Tue, 02 Mar 2021 09:00:00 +0900</pubDate><atom:modified>Tue, 02 Mar 2021 09:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/03/02/php-reflectionclass/</guid><description>&lt;h1 id="private-propertymethod-を読み書き実行">private property・method を読み書き・実行&lt;/h1>
&lt;p>諸事情によりクラスのprivateなproperty、Methodを触る必要がありました。&lt;br />
その時のメモです。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item><item><title>【PHP】PHPUnit の出力ログを見やすくHTMLに変換</title><link>https://c-a-p-engineer.github.io/tech/2021/02/22/phpunit-xsltproc/</link><pubDate>Mon, 22 Feb 2021 15:00:00 +0900</pubDate><atom:modified>Mon, 22 Feb 2021 15:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/02/22/phpunit-xsltproc/</guid><description>&lt;h1 id="phpunit-の出力ログを見やすくhtmlに変換">PHPUnit の出力ログを見やすくHTMLに変換&lt;/h1>
&lt;p>PHPUnitのログが見にくいためにHTMLに変換して見やすくします。&lt;/p>
&lt;h2 id="ログを出力する">ログを出力する&lt;/h2>
&lt;p>PHPUnitの説明に従いまずはXML形式のログを出力するようにします。&lt;br />
&lt;a href="https://phpunit.readthedocs.io/ja/latest/configuration.html#appendixes-configuration-logging" target="_blank" rel="nofollow noopener">3. XML 設定ファイル — PHPUnit latest Manual&lt;/a>&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHPUnit</category><category>PHP</category></item><item><title>【PHP】緩やかな比較</title><link>https://c-a-p-engineer.github.io/tech/2021/02/21/php-comparaisions-loose/</link><pubDate>Sun, 21 Feb 2021 11:00:00 +0900</pubDate><atom:modified>Sun, 21 Feb 2021 11:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/02/21/php-comparaisions-loose/</guid><description>&lt;h1 id="php-の緩やかな比較">PHP の緩やかな比較&lt;/h1>
&lt;p>PHP は比較演算子の &lt;code>==&lt;/code> を使用した際に緩やかな比較を行います。&lt;br />
この緩やかな比較はとても間違いやすくて曖昧になりやすいため気をつけて使わなければいけません。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】int型でオーバーフロー</title><link>https://c-a-p-engineer.github.io/tech/2021/02/19/php-intval/</link><pubDate>Fri, 19 Feb 2021 12:00:00 +0900</pubDate><atom:modified>Fri, 19 Feb 2021 12:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/02/19/php-intval/</guid><description>&lt;h1 id="php-の-int最大値">PHP の int最大値&lt;/h1>
&lt;p>PHP の int型の最大値は32bit環境では2147483647、64bit環境では9223372036854775808となります。&lt;br />
プログラム言語によりますが int型で宣言されているものが int型の桁数を超えた場合にオーバーフローが発生します。&lt;br />
でも、PHPは動的型付け言語のためint型の最大値を超えた場合は自動的に float型になります。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】uniqidの危険性</title><link>https://c-a-p-engineer.github.io/tech/2021/02/18/php-uniqid/</link><pubDate>Thu, 18 Feb 2021 09:00:00 +0900</pubDate><atom:modified>Thu, 18 Feb 2021 09:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2021/02/18/php-uniqid/</guid><description>&lt;h1 id="uniqidの危険性">uniqidの危険性&lt;/h1>
&lt;p>PHPでは &lt;code>uniqid&lt;/code> という一意のIDを生成するという意味の名を持つ関数が存在します。&lt;br />
ですがこれを安易に使用するととても危険です。&lt;br />
&lt;a href="https://www.php.net/manual/ja/function.uniqid.php" target="_blank" rel="nofollow noopener">PHP: uniqid - Manual&lt;/a>&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category><category>PHPの罠</category></item><item><title>【PHP】VSCode で Xdebug を使用してデバッグをする方法</title><link>https://c-a-p-engineer.github.io/tech/2022/02/12/php-xdebug-vscode/</link><pubDate>Fri, 12 Feb 2021 17:00:00 +0900</pubDate><atom:modified>Fri, 12 Feb 2021 17:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/tech/2022/02/12/php-xdebug-vscode/</guid><description>&lt;h1 id="phpvscode-で-xdebug-を使用してデバッグをする方法">【PHP】VSCode で Xdebug を使用してデバッグをする方法&lt;/h1>
&lt;p>VSCode を使用しての PHP デバッグ方法メモ。&lt;/p>
&lt;h2 id="前提">前提&lt;/h2>
&lt;ul>
&lt;li>VSCode をエディタとして利用
&lt;ul>
&lt;li>プラグイン &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers" target="_blank" rel="nofollow noopener">Remote - Containers&lt;/a> 導入済み&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Docker を導入済み&lt;/li>
&lt;/ul>
&lt;p>簡単にご説明しますと Docker 内で VSCode が起動するので環境が同一になるように作られています。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/php.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>PHP</category><category>PHP</category></item></channel></rss>