name: Github Pages Build

on:
  push:
    branches:
      - master
    paths:
      - 'blog/**'

jobs:
  Bulid:
    # Ubuntu
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 1    # Fetch all history for .GitInfo and .Lastmod

      # Setup Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.146.4'
          extended: true

      # PHP extension
      - name: Setup PHP with pecl extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: gd

      # Crete Ogp
      - name: Create Ogp
        run: |
          sudo php ./php/ogp/exec.php

      # Hugo Build
      - name: Build
        run: |
          sudo chmod -R 777 ./blog
          cd ./blog
          sudo rm -rf ../docs
          hugo --minify
          mv -fv ./public/ ../docs/

      # Commit
      - name: Update Hugo
        uses: stefanzweifel/git-auto-commit-action@v4.2.0
        with:
          commit_message: Update Build Files

  Lighthouse:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - run: mkdir -p ${{ github.workspace }}/tmp/artifacts
    - name: Lighthouse
      uses: foo-software/lighthouse-check-action@master
      with:
        outputDirectory: ${{ github.workspace }}/tmp/artifacts
        urls: 'https://c-a-p-engineer.github.io/'
    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: Lighthouse reports
        path: ${{ github.workspace }}/tmp/artifacts

  Notification:
    # Ubuntu
    runs-on: ubuntu-latest
    needs: bulid
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      # Composer Install
      - name: Composer Install
        run: |
          cd ./php
          composer install --prefer-dist --no-progress --no-suggest

      # Tweet
      - name: Post Tweet
        env:
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        run: |
          php ./php/twitter/blog_tweet.php post

      # Slack
      - name: Slack Notification
        if: success()
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: Blog Build
          attachments: |
            [
              {
                "color": "good",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "Push Repository",
                    "value": "${{ github.event.repository.url }}"
                  }, 
                  {
                    "title": "Pusb Branch",
                    "value": "${{ github.ref }}"
                  }, 
                  {
                    "title": "Commit Message",
                    "value": "${{ github.event.head_commit.message }}"
                  }
                ]
              }
            ]

      # Discord
      - name: Discord Notify
        if: success()
        uses: appleboy/discord-action@0.0.3
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          color: "#48f442"
          username: "GitHub Bot"
          args: Blog Build ${{ github.event.repository.url }} ${{ github.ref }} ${{ github.event.head_commit.message }}
