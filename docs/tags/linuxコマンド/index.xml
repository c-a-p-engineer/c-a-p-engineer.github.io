<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Linuxコマンド on こぴぺたん ログ</title><link>https://c-a-p-engineer.github.io/tags/linux%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/</link><description>Recent content in Linuxコマンド on こぴぺたん ログ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Sun, 14 Jul 2024 11:40:00 +0900</lastBuildDate><atom:link href="https://c-a-p-engineer.github.io/tags/linux%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/index.xml" rel="self" type="application/rss+xml"/><item><title>【Linux】Linuxで環境変数を一括表示する方法</title><link>https://c-a-p-engineer.github.io/linux-print-environment-variables/</link><pubDate>Sun, 14 Jul 2024 11:40:00 +0900</pubDate><atom:modified>Sun, 14 Jul 2024 11:40:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/linux-print-environment-variables/</guid><description>&lt;h1 id="linuxlinuxで環境変数を一括表示する方法">【Linux】Linuxで環境変数を一括表示する方法&lt;/h1>
&lt;p>環境変数は、システムやアプリケーションに設定情報を提供する重要な要素です。Linuxでは、環境変数を簡単に確認するためのコマンドがいくつか用意されています。この記事では、Linux環境で環境変数を一括して表示する方法について説明します。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/linux.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>Linux</category><category>Linuxコマンド</category><category>Linux</category></item><item><title>wgetを使用したファイルのダウンロードと名前のカスタマイズ</title><link>https://c-a-p-engineer.github.io/wget-filename/</link><pubDate>Tue, 16 Jan 2024 04:30:00 +0900</pubDate><atom:modified>Tue, 16 Jan 2024 04:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/wget-filename/</guid><description>&lt;h1 id="wgetを使用したファイルのダウンロードと名前のカスタマイズ">wgetを使用したファイルのダウンロードと名前のカスタマイズ&lt;/h1>
&lt;p>ウェブからファイルをダウンロードする際、&lt;code>wget&lt;/code> はLinuxユーザーにとって非常に便利なツールです。&lt;br />
&lt;code>wget&lt;/code> を使用して特定の URL からファイルをダウンロードし、そのファイル名をカスタマイズする方法を詳しく説明します。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/linux.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>Linux</category><category>Linuxコマンド</category><category>Linux</category></item><item><title>【Linux】一定間隔でコマンドを繰り返し実行する「watch」</title><link>https://c-a-p-engineer.github.io/linux-watch/</link><pubDate>Wed, 07 Sep 2022 09:00:00 +0900</pubDate><atom:modified>Thu, 22 Sep 2022 18:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/linux-watch/</guid><description>&lt;h1 id="linuxコマンドを繰り返してくれるwatch">【Linux】コマンドを繰り返してくれる「watch」&lt;/h1>
&lt;p>Linux上でコマンドを繰り返して欲しい時に使用する &lt;code>watch&lt;/code>コマンド。&lt;br />
たとえば &lt;code>date&lt;/code>コマンドを実行してリアルタイムにLinux上の時刻を表示ができます。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/linux.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>Linux</category><category>Linuxコマンド</category><category>Linux</category></item><item><title>【Linux】実行中のジョブをターミナルの接続が切れても終了させないように出来る「disown」</title><link>https://c-a-p-engineer.github.io/linux-disown/</link><pubDate>Sun, 12 Jun 2022 12:30:00 +0900</pubDate><atom:modified>Sun, 12 Jun 2022 12:30:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/linux-disown/</guid><description>&lt;h1 id="linux実行中のジョブを終了させないdisown">【Linux】実行中のジョブを終了させない「disown」&lt;/h1>
&lt;p>実行中のジョブを終了させない &lt;code>disown&lt;/code> の使い方。&lt;br />
実行したプログラムが思ったより時間がかかり終わらないけど&lt;del>帰りたい&lt;/del>ターミナルを閉じたい時に使えます。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/linux.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>Linux</category><category>Linuxコマンド</category><category>Linux</category></item><item><title>【Linux】接続を切っても処理を継続させる「nohup」</title><link>https://c-a-p-engineer.github.io/linux-nohup/</link><pubDate>Sat, 11 Jun 2022 10:00:00 +0900</pubDate><atom:modified>Sat, 11 Jun 2022 10:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/linux-nohup/</guid><description>&lt;h1 id="linux接続を切っても処理を継続させる方法">【Linux】接続を切っても処理を継続させる方法&lt;/h1>
&lt;p>Linuxに接続している状態でコマンド実行した際にネットワークなど何らかの理由で切られる危険性があり、対策として &lt;code>nohup&lt;/code> を使用して接続が切られても処理を継続させる方法を取りました。&lt;br />
ターミナルと閉じたり接続が切れると実行していた処理が中断されます。&lt;br />
&lt;del>なので帰りたいけど帰れない&lt;/del>&lt;br />
そのためLinux上で数時間以上掛かる処理ならこれを使用するのが得策です。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/linux.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>Linux</category><category>Linuxコマンド</category><category>Linux</category></item><item><title>【Linux】プロセスを一括でkillする</title><link>https://c-a-p-engineer.github.io/linux-pgrep-xargs/</link><pubDate>Sat, 24 Apr 2021 08:00:00 +0900</pubDate><atom:modified>Sat, 24 Apr 2021 08:00:00 +0900</atom:modified><guid>https://c-a-p-engineer.github.io/linux-pgrep-xargs/</guid><description>&lt;h1 id="linuxのプロセスを一括でkillする方法">Linuxのプロセスを一括でkillする方法&lt;/h1>
&lt;p>テストなどをしていると無駄なプロセスが立ち上がり続ける事があります。&lt;br />
大量のプロセスが発生した時に &lt;code>ps&lt;/code> コマンドで一々プロセスID調べて &lt;code>kill&lt;/code> するのも手間なので特定のプロセス名を指定して一括 &lt;code>kill&lt;/code> する方法です。&lt;/p></description><dc:creator>こぴぺたん</dc:creator><media:content url="https://c-a-p-engineer.github.io/images/thumbnail/linux.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>Linux</category><category>Linuxコマンド</category><category>Linux</category></item></channel></rss>